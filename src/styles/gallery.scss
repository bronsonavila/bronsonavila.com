$card-size--lg: 275px;
$card-size--md: $card-size--lg * 0.794403;
$card-size--sm: $card-size--lg * 0.65662002;
$image-width--lg: 929px;
$image-width--md: $image-width--lg * 0.794403;
$image-width--sm: $image-width--lg * 0.65662002;

.gallery__card {
  @apply relative;
  @apply hidden;
  @apply h-0;
  @apply bg-white;
  @apply border;
  @apply border-gray-400;
  @apply shadow;
  @apply opacity-0;
  @apply cursor-pointer;
  @apply z-10;
  width: $card-size--sm;
  transform: scale(0.9) translateY(100px);
  transition: opacity 0.3s ease-in-out, transform 0.5s; // `transform` for smooth `mouseover` animation.
  will-change: transform;

  @screen md {
    width: $card-size--md;
  }

  @screen lg {
    width: $card-size--lg;
  }

  &:focus {
    @apply outline-none;
  }

  // Performant box shadow animation.
  // See: https://tobiasahlin.com/blog/how-to-animate-box-shadow/
  &::after {
    @apply absolute;
    @apply top-0;
    @apply left-0;
    @apply h-full;
    @apply w-full;
    @apply opacity-0;
    @apply transition-opacity;
    @apply duration-300;
    @apply ease-in-out;
    content: '';
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.025), 0 2px 4px -1px rgba(0, 0, 0, 0.015);
  }

  &.has-entered {
    @apply opacity-100;
    height: $card-size--sm;
    transform: scale(1) translateY(0);

    @screen md {
      height: $card-size--md;
    }

    @screen lg {
      height: $card-size--lg;
    }

    &:hover {
      &::after {
        @apply opacity-100;
      }
    }
  }

  &.is-visible {
    @apply block;
  }

  img {
    @apply border;
    @apply border-solid;
    @apply border-gray-300;
    @apply bg-gray-300;
    border-left-color: #ccc;
    border-top-color: #ccc;
    transform: scale(0.9);
  }

  &-container {
    height: $card-size--sm;
    width: $card-size--sm;
    margin-bottom: 33px;

    @screen md {
      height: $card-size--md;
      width: $card-size--md;
      margin-bottom: 40px;
    }

    @screen lg {
      height: $card-size--lg;
      width: $card-size--lg;
      margin-bottom: 51px;
    }
  }
}

.gallery__cards {
  @apply flex;
  @apply flex-wrap;
  @apply justify-between;
  @apply w-full;
  max-width: $image-width--sm;

  @screen md {
    max-width: $image-width--md;
  }

  @screen lg {
    max-width: $image-width--lg;
  }
}

.gallery-modal {
  @apply absolute;
  @apply top-0;
  @apply left-0;
  @apply bg-white;
  @apply border;
  @apply border-gray-400;
  @apply overflow-hidden;
  @apply shadow-2xl;
  @apply z-20;
  transform: translate(-9999px, -9999px); // Hidden by default.

  &.has-smooth-transition {
    .gallery-modal__image {
      @apply transition-all;
      @apply duration-300;
      @apply ease-in; // Looks better than `ease-in-out`.
    }
  }

  &.is-hovered {
    figcaption {
      @apply opacity-100;
      transform: scaleY(1);
    }

    .gallery-modal__button--close,
    .gallery-modal__button--next {
      @apply opacity-100;
      transform: translateY(0);
    }

    .gallery-modal__button--previous {
      @apply opacity-100;
      transform: rotate(180deg) translateY(0);
    }
  }

  &.is-open {
    @apply transition-all;
    @apply duration-300;
    @apply ease-in-out;
  }

  &__button {
    @apply absolute;
    @apply transition-all;
    @apply duration-300;
    @apply ease-in-out;
    @apply opacity-0;
    @apply z-10;

    &:focus,
    &:hover {
      @apply outline-none;
    }

    svg {
      @apply fill-current;
      @apply h-6;
      @apply w-6;
      @apply m-2;

      // Specific `starter-default` override for this case only.
      &:not(:root) {
        overflow: initial;
      }
    }

    &--close {
      @extend .gallery-modal__button;
      @apply top-0;
      @apply right-0;
      @apply text-red-800;
      transform: translateY(-20px);

      &:focus,
      &:hover {
        @apply text-red-700;
      }
    }

    &--next {
      @extend .gallery-modal__button;
      @apply right-0;
      @apply text-gray-900;
      bottom: 2px;
      transform: translateY(20px);

      &:focus,
      &:hover {
        @apply text-gray-600;
      }
    }

    &--previous {
      @extend .gallery-modal__button;
      @apply left-0;
      @apply text-gray-900;
      bottom: 2px;
      transform: rotate(180deg) translateY(-20px);

      &:focus,
      &:hover {
        @apply text-gray-600;
      }
    }
  }

  &__image {
    @apply hidden;
    @apply absolute;
    @apply top-0;
    width: $image-width--sm;
    left: 50%;

    @screen md {
      width: $image-width--md;
    }

    @screen lg {
      width: $image-width--lg;
    }

    &.is-displayed {
      @apply block;
      @apply bg-white;
      @apply opacity-100;
      transform: translateX(-50%);
    }

    // By assigning the `translateX` value to 49.9% rather than an even 50%, the image
    // element will have a small (but otherwise invisible) fraction of its bounding box
    // within the modal element. By having a portion of the image within the modal, the
    // modal's `.overflow-hidden` class will no longer block the loading of the resource.
    // The end result is that the next image will be "pre-loaded" and ready for viewing
    // when the user clicks the "next" button. The same applies to `.is-previous` below.
    &.is-next {
      @apply block;
      transform: translateX(49.9%);
    }

    &.is-previous {
      @apply block;
      transform: translateX(-149.9%);
    }

    &.will-fade-in {
      @apply opacity-0;
    }

    figcaption {
      @apply absolute;
      @apply bottom-0;
      @apply text-sm;
      @apply text-white;
      @apply leading-relaxed;
      @apply tracking-tighter;
      @apply transition-all;
      @apply duration-300;
      @apply ease-in-out;
      @apply m-3;
      @apply px-6;
      @apply py-4;
      @apply opacity-0;
      @apply w-full;
      background: rgba(0, 0, 0, 0.55);
      max-width: calc(100% - 22.5px);
      transform: scaleY(0);
      transform-origin: bottom;

      @screen md {
        @apply text-base;
        @apply m-4;
        @apply px-8;
        @apply py-6;
        max-width: calc(100% - 30px);
      }
    }

    img {
      @apply p-3;

      @screen md {
        @apply p-4;
      }
    }
  }
}
